openapi: 3.0.3
info:
  title: Pressograph API
  description: |
    REST API for Pressograph - Pressure Test Visualization Platform

    ## Features
    - Graph generation from pressure test data
    - PNG/PDF export capabilities
    - Public shareable links with access control
    - User authentication with JWT
    - Admin dashboard and analytics

    ## Authentication
    Most endpoints require JWT authentication. Include the access token in the Authorization header:
    ```
    Authorization: Bearer <access_token>
    ```

    ## Rate Limiting
    API key endpoints are rate-limited. Default limits apply unless configured otherwise.
  version: 1.0.0
  contact:
    name: API Support
    url: https://github.com/dantte-lp/pressograph
  license:
    name: MIT

servers:
  - url: http://localhost:3001/api/v1
    description: Development server
  - url: https://api.pressograph.com/api/v1
    description: Production server

tags:
  - name: Health
    description: Health check endpoints
  - name: Setup
    description: Initial installation and configuration
  - name: Authentication
    description: User authentication and token management
  - name: Graphs
    description: Graph generation and management
  - name: Public
    description: Public access endpoints (no auth required)
  - name: Admin
    description: Administrative functions

paths:
  /health:
    get:
      summary: Health check
      description: Returns the health status of the API
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  uptime:
                    type: number
                    description: Server uptime in seconds
                    example: 86400
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-10-28T12:00:00.000Z'

  /setup/status:
    get:
      summary: Check setup status
      description: Returns whether the application has been set up
      tags:
        - Setup
      responses:
        '200':
          description: Setup status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSetup:
                    type: boolean
                  adminExists:
                    type: boolean

  /setup/install:
    post:
      summary: Complete initial setup
      description: Creates the admin user and initializes the application
      tags:
        - Setup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 50
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '200':
          description: Setup completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Setup already completed

  /auth/login:
    post:
      summary: User login
      description: Authenticates user and returns JWT tokens
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/refresh:
    post:
      summary: Refresh access token
      description: Generates new access token using refresh token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  accessToken:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/logout:
    post:
      summary: User logout
      description: Revokes the refresh token
      tags:
        - Authentication
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /graph/generate:
    post:
      summary: Generate pressure test graph
      description: Generates a pressure test graph from provided settings
      tags:
        - Graphs
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphSettings'
      responses:
        '200':
          description: Graph generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  settings:
                    $ref: '#/components/schemas/GraphSettings'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /graph/export/png:
    post:
      summary: Export graph as PNG
      description: Exports the generated graph as a PNG image
      tags:
        - Graphs
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphSettings'
      responses:
        '200':
          description: PNG exported successfully
          content:
            image/png:
              schema:
                type: string
                format: binary
        '501':
          description: Not yet implemented

  /graph/export/pdf:
    post:
      summary: Export graph as PDF
      description: Exports the generated graph as a PDF document
      tags:
        - Graphs
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphSettings'
      responses:
        '200':
          description: PDF exported successfully
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '501':
          description: Not yet implemented

  /graph/validate:
    post:
      summary: Validate graph settings
      description: Validates the provided graph settings without generating
      tags:
        - Graphs
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphSettings'
      responses:
        '200':
          description: Validation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  valid:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string

  /graph/history:
    get:
      summary: Get graph generation history
      description: Returns a paginated list of previously generated graphs
      tags:
        - Graphs
      security:
        - BearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: History retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  graphs:
                    type: array
                    items:
                      $ref: '#/components/schemas/GraphHistoryItem'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer

  /graph/share:
    post:
      summary: Create share link
      description: Creates a public shareable link for a graph
      tags:
        - Graphs
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - graphId
              properties:
                graphId:
                  type: integer
                  description: ID of the graph to share
                expiresIn:
                  type: integer
                  description: Expiration time in seconds
                  example: 86400
                maxViews:
                  type: integer
                  description: Maximum number of views allowed
                  example: 100
                allowDownload:
                  type: boolean
                  description: Whether to allow downloads
                  default: true
      responses:
        '200':
          description: Share link created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  shareLink:
                    $ref: '#/components/schemas/ShareLink'
        '404':
          description: Graph not found

  /public/share/{token}:
    get:
      summary: View shared graph
      description: Returns graph data for a public share link
      tags:
        - Public
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
          description: Share token
      responses:
        '200':
          description: Graph data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  graph:
                    type: object
                    properties:
                      id:
                        type: integer
                      testNumber:
                        type: string
                      settings:
                        $ref: '#/components/schemas/GraphSettings'
                      createdAt:
                        type: string
                        format: date-time
                  share:
                    type: object
                    properties:
                      viewCount:
                        type: integer
                      maxViews:
                        type: integer
                        nullable: true
                      expiresAt:
                        type: string
                        format: date-time
                        nullable: true
                      allowDownload:
                        type: boolean
        '404':
          description: Share link not found or expired

  /public/share/{token}/download:
    get:
      summary: Download shared graph
      description: Downloads the graph file if allowed
      tags:
        - Public
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File download initiated
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Share link not found, expired, or download not allowed
        '501':
          description: Download not yet implemented

  /public/share/{token}/info:
    get:
      summary: Get share link info
      description: Returns metadata about the share link
      tags:
        - Public
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Share info retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  info:
                    type: object
                    properties:
                      testNumber:
                        type: string
                      format:
                        type: string
                      viewCount:
                        type: integer
                      maxViews:
                        type: integer
                        nullable: true
                      expiresAt:
                        type: string
                        format: date-time
                        nullable: true
                      allowDownload:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
                      isExpired:
                        type: boolean
                      isMaxViewsReached:
                        type: boolean
                      isValid:
                        type: boolean
        '404':
          description: Share link not found

  /admin/dashboard:
    get:
      summary: Get admin dashboard data
      description: Returns statistics and overview data for admin dashboard
      tags:
        - Admin
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Dashboard data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '403':
          $ref: '#/components/responses/Forbidden'

  /admin/users:
    get:
      summary: List all users
      description: Returns a list of all users (admin only)
      tags:
        - Admin
      security:
        - BearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  total:
                    type: integer
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  schemas:
    GraphSettings:
      type: object
      required:
        - testNumber
        - startDate
        - startTime
        - testDuration
        - workingPressure
      properties:
        testNumber:
          type: string
          description: Unique test identifier
          example: "TEST-2025-001"
        startDate:
          type: string
          format: date
          description: Test start date (ISO 8601)
          example: "2025-10-27"
        startTime:
          type: string
          description: Test start time
          example: "09:00"
        testDuration:
          type: number
          description: Total test duration in hours
          example: 24
        workingPressure:
          type: number
          description: Working pressure in MPa
          example: 30
        pressureTests:
          type: array
          items:
            $ref: '#/components/schemas/PressureTest'
        showInfo:
          type: string
          enum: [all, basic, none]
          default: all
        language:
          type: string
          enum: [ru, en]
          default: ru

    PressureTest:
      type: object
      required:
        - id
        - time
        - duration
      properties:
        id:
          type: string
          description: Unique test ID
        time:
          type: number
          description: Time from start in hours
          example: 0
        duration:
          type: number
          description: Test duration in minutes
          example: 30
        pressure:
          type: number
          description: Test pressure in MPa
          example: 30
        minPressure:
          type: number
          description: Minimum pressure during hold
        maxPressure:
          type: number
          description: Maximum pressure during hold
        targetPressure:
          type: number
          description: Target pressure after drop
        holdDrift:
          type: number
          description: Pressure drift during hold

    GraphHistoryItem:
      type: object
      properties:
        id:
          type: integer
        test_number:
          type: string
        export_format:
          type: string
          enum: [png, pdf, json]
        file_size:
          type: integer
          description: File size in bytes
        generation_time_ms:
          type: integer
        status:
          type: string
          enum: [success, failed, pending]
        created_at:
          type: string
          format: date-time

    ShareLink:
      type: object
      properties:
        id:
          type: integer
        token:
          type: string
        url:
          type: string
          format: uri
          description: Full public URL
        expiresAt:
          type: string
          format: date-time
          nullable: true
        maxViews:
          type: integer
          nullable: true
        allowDownload:
          type: boolean
        createdAt:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, user, viewer]
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
          nullable: true

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        user:
          $ref: '#/components/schemas/User'
        accessToken:
          type: string
        refreshToken:
          type: string

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
        errors:
          type: array
          items:
            type: string

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Authentication required or invalid token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT access token obtained from /auth/login or /auth/refresh
