# ═══════════════════════════════════════════════════════════════════
# VictoriaMetrics Scrape Configuration
# ═══════════════════════════════════════════════════════════════════
# This configuration file defines the Prometheus scrape targets for
# VictoriaMetrics to collect metrics from various exporters and services.
#
# Documentation:
# - VictoriaMetrics: https://docs.victoriametrics.com/
# - Prometheus config: https://prometheus.io/docs/prometheus/latest/configuration/configuration/
# ═══════════════════════════════════════════════════════════════════

global:
  scrape_interval: 30s       # How frequently to scrape targets by default
  scrape_timeout: 10s        # How long until a scrape request times out
  # Note: evaluation_interval removed - not supported by VictoriaMetrics (Prometheus-specific for rules)

# Scrape configurations for all targets
scrape_configs:
  # ═══════════════════════════════════════════════════════════════════
  # VictoriaMetrics Self-Monitoring
  # ═══════════════════════════════════════════════════════════════════
  - job_name: 'victoriametrics'
    static_configs:
      - targets: ['victoriametrics:8428']
        labels:
          service: 'victoriametrics'
          environment: 'observability'

  # ═══════════════════════════════════════════════════════════════════
  # VMAgent Monitoring
  # ═══════════════════════════════════════════════════════════════════
  - job_name: 'vmagent'
    static_configs:
      - targets: ['vmagent:8429']
        labels:
          service: 'vmagent'
          environment: 'observability'

  # ═══════════════════════════════════════════════════════════════════
  # PostgreSQL Exporter (Development Database)
  # ═══════════════════════════════════════════════════════════════════
  - job_name: 'postgres-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgres'
          database: 'pressograph_dev'
          environment: 'development'

  # ═══════════════════════════════════════════════════════════════════
  # Node Exporter (Host System Metrics)
  # ═══════════════════════════════════════════════════════════════════
  - job_name: 'node-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'
          environment: 'observability'

  # ═══════════════════════════════════════════════════════════════════
  # Grafana Tempo (Traces Storage)
  # ═══════════════════════════════════════════════════════════════════
  - job_name: 'tempo'
    scrape_interval: 30s
    static_configs:
      - targets: ['tempo:3200']
        labels:
          service: 'tempo'
          environment: 'observability'

  # ═══════════════════════════════════════════════════════════════════
  # Grafana (Visualization Platform)
  # ═══════════════════════════════════════════════════════════════════
  - job_name: 'grafana'
    scrape_interval: 30s
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'
          environment: 'observability'

  # ═══════════════════════════════════════════════════════════════════
  # Development Backend API
  # ═══════════════════════════════════════════════════════════════════
  - job_name: 'backend-dev'
    scrape_interval: 30s
    static_configs:
      - targets: ['pressograph-dev-backend:3001']
        labels:
          service: 'backend'
          app: 'pressograph'
          environment: 'development'

# ═══════════════════════════════════════════════════════════════════
# Notes:
# ═══════════════════════════════════════════════════════════════════
# 1. Service Discovery:
#    - Uses static_configs for simplicity (suitable for dev/staging)
#    - For production, consider using Kubernetes SD, Consul SD, or DNS SD
#
# 2. Labels:
#    - All targets have consistent labels (service, environment)
#    - Labels help with filtering and grouping in Grafana queries
#
# 3. Scrape Intervals:
#    - Default: 30s (suitable for observability)
#    - Can be adjusted per job if needed (e.g., 15s for critical metrics)
#
# 4. Target Health:
#    - VictoriaMetrics automatically adds "up" metric (0 or 1)
#    - Check /targets endpoint on VictoriaMetrics UI to see health status
#
# 5. Metric Retention:
#    - Configured in VictoriaMetrics startup flags
#    - Default retention: 1 month (-retentionPeriod=1)
# ═══════════════════════════════════════════════════════════════════
