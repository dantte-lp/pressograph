# ═══════════════════════════════════════════════════════════════════
# Pressograph Observability Stack Environment Variables
# ═══════════════════════════════════════════════════════════════════
# Этот файл содержит переменные для observability stack
# Для development безопасно коммитить (слабые пароли)
# Для production ГЕНЕРИРУЙТЕ сильные секреты!
# ═══════════════════════════════════════════════════════════════════

# ═══════════════════════════════════════════════════════════════════
# Environment Configuration
# ═══════════════════════════════════════════════════════════════════
# development или production
ENVIRONMENT=development

# OCI Image versioning
VERSION=1.0.0-observability

# ═══════════════════════════════════════════════════════════════════
# VictoriaMetrics Configuration
# ═══════════════════════════════════════════════════════════════════
# Retention period для метрик (примеры: 7d, 30d, 90d, 1y)
# Development: 30d (экономия места)
# Production: 90d или больше
VM_RETENTION_PERIOD=30d

# Domain для VictoriaMetrics UI
# Development: victoria-dev.infra4.dev
# Production: victoria.infra4.dev
VM_DOMAIN=victoria-dev.infra4.dev

# ═══════════════════════════════════════════════════════════════════
# VictoriaLogs Configuration
# ═══════════════════════════════════════════════════════════════════
# Retention period для логов (примеры: 7d, 14d, 30d, 90d)
# Development: 14d (логи быстро растут)
# Production: 30d или больше
VLOGS_RETENTION_PERIOD=14d

# Domain для VictoriaLogs UI
VLOGS_DOMAIN=logs-dev.infra4.dev

# ═══════════════════════════════════════════════════════════════════
# Tempo (Tracing) Configuration
# ═══════════════════════════════════════════════════════════════════
# Retention period для трейсов (примеры: 3d, 7d, 14d)
# Development: 7d (трейсы занимают много места)
# Production: 7d-14d (редко нужно больше)
TEMPO_RETENTION_PERIOD=7d

# ═══════════════════════════════════════════════════════════════════
# Grafana Configuration
# ═══════════════════════════════════════════════════════════════════
# Admin credentials
# ⚠️  DEVELOPMENT: Слабые пароли допустимы
# 🔒 PRODUCTION: Генерируйте сильный пароль!
#     openssl rand -base64 32
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin

# Domain и URL
GRAFANA_DOMAIN=grafana-dev.infra4.dev
GRAFANA_ROOT_URL=https://grafana-dev.infra4.dev

# Secret key для signing cookies/sessions
# 🔒 PRODUCTION: ОБЯЗАТЕЛЬНО генерируйте уникальный!
#     openssl rand -hex 32
GRAFANA_SECRET_KEY=dev_grafana_secret_key_change_in_production_2025

# Log level (debug, info, warn, error)
# Development: debug или info
# Production: info или warn
GRAFANA_LOG_LEVEL=info

# ═══════════════════════════════════════════════════════════════════
# PostgreSQL Exporter Configuration
# ═══════════════════════════════════════════════════════════════════
# Data Source Name для подключения к PostgreSQL
# Format: postgresql://user:password@host:port/database?sslmode=disable
#
# ВАЖНО: Подключается к PostgreSQL из compose.dev.yaml
# Host должен быть доступен через сеть (добавьте observability network)
#
# Development (из .env.dev):
POSTGRES_EXPORTER_DSN=postgresql://pressograph_dev:devpassword_changeme_2025@pressograph-dev-postgres:5432/pressograph_dev?sslmode=disable

# Production (обновите credentials из .env.prod):
# POSTGRES_EXPORTER_DSN=postgresql://pressograph:STRONG_PASSWORD@pressograph-prod-postgres:5432/pressograph?sslmode=disable

# ═══════════════════════════════════════════════════════════════════
# Prometheus Scrape Configuration (для vmagent)
# ═══════════════════════════════════════════════════════════════════
# Эти переменные используются в scrape.yml
# Обычно не требуется менять, но можно кастомизировать intervals

# Scrape interval (как часто собирать метрики)
SCRAPE_INTERVAL=15s

# Scrape timeout
SCRAPE_TIMEOUT=10s

# ═══════════════════════════════════════════════════════════════════
# Примеры конфигураций для разных окружений
# ═══════════════════════════════════════════════════════════════════

# ┌─────────────────────────────────────────────────────────────────┐
# │ DEVELOPMENT EXAMPLE (текущие настройки)                          │
# └─────────────────────────────────────────────────────────────────┘
# ENVIRONMENT=development
# VM_RETENTION_PERIOD=30d
# VLOGS_RETENTION_PERIOD=14d
# TEMPO_RETENTION_PERIOD=7d
# GRAFANA_ADMIN_USER=admin
# GRAFANA_ADMIN_PASSWORD=admin
# GRAFANA_DOMAIN=grafana-dev.infra4.dev
# VM_DOMAIN=victoria-dev.infra4.dev
# VLOGS_DOMAIN=logs-dev.infra4.dev

# ┌─────────────────────────────────────────────────────────────────┐
# │ PRODUCTION EXAMPLE                                               │
# └─────────────────────────────────────────────────────────────────┘
# ENVIRONMENT=production
# VM_RETENTION_PERIOD=90d
# VLOGS_RETENTION_PERIOD=30d
# TEMPO_RETENTION_PERIOD=14d
# GRAFANA_ADMIN_USER=admin
# GRAFANA_ADMIN_PASSWORD=<GENERATE_WITH_OPENSSL_RAND_BASE64_32>
# GRAFANA_SECRET_KEY=<GENERATE_WITH_OPENSSL_RAND_HEX_32>
# GRAFANA_DOMAIN=grafana.infra4.dev
# GRAFANA_ROOT_URL=https://grafana.infra4.dev
# VM_DOMAIN=victoria.infra4.dev
# VLOGS_DOMAIN=logs.infra4.dev
# POSTGRES_EXPORTER_DSN=postgresql://pressograph:STRONG_PASSWORD@pressograph-prod-postgres:5432/pressograph?sslmode=disable

# ═══════════════════════════════════════════════════════════════════
# Дисковое пространство и Retention Planning
# ═══════════════════════════════════════════════════════════════════
#
# VictoriaMetrics (метрики):
#   - ~1GB на 1 млн активных time series за 30 дней
#   - Для небольшого проекта: 30d retention ≈ 2-5GB
#   - Для среднего проекта: 90d retention ≈ 10-20GB
#
# VictoriaLogs (логи):
#   - Зависит от объема логов (highly variable)
#   - JSON logs занимают ~1KB на запись
#   - 100 req/sec = ~8GB/день несжатого JSON
#   - Compression ratio ~5-10x
#   - Рекомендация: 14d retention для start
#
# Tempo (трейсы):
#   - ~10KB на span (зависит от attributes)
#   - Sampling 1% для production
#   - 7-14d retention обычно достаточно
#   - Рекомендация: 7d retention для start
#
# Grafana:
#   - SQLite database ~50-100MB
#   - Минимальное дисковое пространство
#
# ИТОГО для development:
#   VictoriaMetrics: 5GB
#   VictoriaLogs: 10GB
#   Tempo: 5GB
#   Grafana: 1GB
#   TOTAL: ~20GB безопасный запас
#
# ═══════════════════════════════════════════════════════════════════
# SECURITY CHECKLIST (PRODUCTION)
# ═══════════════════════════════════════════════════════════════════
#
# □ GRAFANA_ADMIN_PASSWORD - сильный пароль (openssl rand -base64 32)
# □ GRAFANA_SECRET_KEY - уникальный секрет (openssl rand -hex 32)
# □ POSTGRES_EXPORTER_DSN - обновлены credentials из .env.prod
# □ .env.observability добавлен в .gitignore для production
# □ Traefik middleware admin-secure@file настроен (IP whitelist/auth)
# □ Retention periods настроены под доступное дисковое пространство
# □ Backup настроен для критичных volumes (victoria-metrics-data, grafana-data)
# □ Monitoring для самого observability stack (meta-monitoring)
#
# ═══════════════════════════════════════════════════════════════════
# USEFUL COMMANDS
# ═══════════════════════════════════════════════════════════════════
#
# Генерация паролей и секретов:
#   openssl rand -base64 32  # Grafana admin password
#   openssl rand -hex 32     # Grafana secret key
#
# Проверка переменных:
#   podman-compose -f compose.observability.yaml --env-file .env.observability config
#
# Запуск stack:
#   # Full stack (всё)
#   podman-compose -f compose.observability.yaml --env-file .env.observability --profile full up -d
#
#   # Только мониторинг
#   podman-compose -f compose.observability.yaml --env-file .env.observability --profile monitoring up -d
#
#   # Только логи
#   podman-compose -f compose.observability.yaml --env-file .env.observability --profile logging up -d
#
# Проверка volumes:
#   podman volume ls | grep observability
#   podman volume inspect pressograph-observability-victoria-metrics-data
#
# Мониторинг дискового пространства:
#   du -sh /var/lib/containers/storage/volumes/pressograph-observability-*
#
# ═══════════════════════════════════════════════════════════════════
# NOTES
# ═══════════════════════════════════════════════════════════════════
#
# 1. Этот файл для development безопасно коммитить
# 2. Для production создайте .env.observability.prod с сильными секретами
# 3. Retention periods влияют на дисковое пространство линейно
# 4. VictoriaMetrics эффективнее Prometheus (меньше RAM и disk)
# 5. VictoriaLogs эффективнее Loki (быстрее query, меньше ресурсов)
# 6. Tempo lightweight для трейсов (не требует много ресурсов)
# 7. Grafana datasources auto-provisioned (не требуется ручная настройка)
#
# ═══════════════════════════════════════════════════════════════════
