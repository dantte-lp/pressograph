# ═══════════════════════════════════════════════════════════════════
# PostgreSQL 18 Configuration for Pressograph
# ═══════════════════════════════════════════════════════════════════
# Optimized for production workload with moderate traffic
# Target: 1GB RAM container, OLTP workload, frequent writes
#
# References:
# - https://pgtune.leopard.in.ua/
# - https://www.postgresql.org/docs/current/runtime-config.html
# ═══════════════════════════════════════════════════════════════════

# ═══════════════════════════════════════════════════════════════════
# Connection Settings
# ═══════════════════════════════════════════════════════════════════

# Listen on all interfaces (required for container networking)
# Default 'localhost' only allows local connections
listen_addresses = '*'

# Maximum number of concurrent connections
# Conservative limit to prevent OOM in 1GB container
max_connections = 100

# Reserved connections for superuser (admin access during emergencies)
superuser_reserved_connections = 3

# ═══════════════════════════════════════════════════════════════════
# Memory Settings
# ═══════════════════════════════════════════════════════════════════

# Shared Buffers - Cache for frequently accessed data
# Rule of thumb: 25% of RAM for dedicated DB server
# For 1GB container: 256MB is optimal
shared_buffers = 256MB

# Effective Cache Size - Total memory available for caching
# Includes OS cache + shared_buffers
# For 1GB container: ~75% of total RAM
effective_cache_size = 768MB

# Maintenance Work Memory - Memory for VACUUM, CREATE INDEX, etc.
# Higher value speeds up maintenance operations
maintenance_work_mem = 64MB

# Work Memory - Memory per query operation (sorting, hash joins)
# Formula: (Total RAM - shared_buffers) / (max_connections * 3)
# (1GB - 256MB) / (100 * 3) ≈ 2.5MB, round to 4MB
work_mem = 4MB

# Huge Pages - Disabled for container environments
huge_pages = off

# Temporary Buffers - Memory for temporary tables
temp_buffers = 8MB

# ═══════════════════════════════════════════════════════════════════
# WAL (Write-Ahead Logging) Settings
# ═══════════════════════════════════════════════════════════════════

# WAL Buffers - Memory for WAL writes before flush to disk
# Auto-tuned based on shared_buffers (1/32 of shared_buffers)
# Manual override: 16MB for better throughput
wal_buffers = 16MB

# Minimum WAL size to keep (prevents frequent creation)
min_wal_size = 1GB

# Maximum WAL size before checkpoint
max_wal_size = 4GB

# Checkpoint Timeout - Time between automatic checkpoints
checkpoint_timeout = 10min

# Checkpoint Completion Target - Spread checkpoint I/O over time
# 0.9 = complete checkpoint in 90% of timeout interval
checkpoint_completion_target = 0.9

# WAL Writer Delay - How often WAL writer wakes up
wal_writer_delay = 200ms

# Commit Delay - Group commits for better throughput
# 0 = disabled (default), can enable for high-concurrency workloads
commit_delay = 0

# ═══════════════════════════════════════════════════════════════════
# Query Planning
# ═══════════════════════════════════════════════════════════════════

# Random Page Cost - Cost of random disk I/O
# 1.1 for SSD (default 4.0 is for HDD)
random_page_cost = 1.1

# Effective I/O Concurrency - Number of concurrent disk operations
# 200 for SSD, 2-4 for HDD
effective_io_concurrency = 200

# Default Statistics Target - Sample size for ANALYZE
# Higher = better estimates, slower ANALYZE
# 100 is good default (50-1000 range)
default_statistics_target = 100

# ═══════════════════════════════════════════════════════════════════
# Parallel Query Settings
# ═══════════════════════════════════════════════════════════════════

# Maximum parallel workers per query
max_parallel_workers_per_gather = 2

# Maximum total parallel workers
max_parallel_workers = 4

# Maximum parallel maintenance workers (for CREATE INDEX, VACUUM)
max_parallel_maintenance_workers = 2

# ═══════════════════════════════════════════════════════════════════
# Logging Configuration
# ═══════════════════════════════════════════════════════════════════

# Where to log
log_destination = 'stderr'

# Enable logging collector
logging_collector = on

# Log directory (relative to PGDATA)
log_directory = 'log'

# Log filename pattern
log_filename = 'postgresql-%Y-%m-%d.log'

# Log rotation
log_rotation_age = 1d
log_rotation_size = 100MB

# Keep logs for 7 days
log_truncate_on_rotation = off

# Log line prefix (timestamp, PID, user, database)
log_line_prefix = '%m [%p] %q%u@%d '

# Timezone for logs
log_timezone = 'UTC'

# ═══════════════════════════════════════════════════════════════════
# What to Log
# ═══════════════════════════════════════════════════════════════════

# Log slow queries (queries taking more than 1 second)
log_min_duration_statement = 1000

# Log checkpoints (useful for performance tuning)
log_checkpoints = on

# Log connections and disconnections
log_connections = on
log_disconnections = on

# Log lock waits longer than 1 second
log_lock_waits = on

# Log temporary files larger than 10MB
log_temp_files = 10240

# Don't log every statement (too verbose for production)
log_statement = 'none'

# Log errors and higher
log_min_messages = warning
client_min_messages = notice

# ═══════════════════════════════════════════════════════════════════
# Autovacuum Settings (Critical for MVCC)
# ═══════════════════════════════════════════════════════════════════

# Enable autovacuum (REQUIRED for production)
autovacuum = on

# Maximum autovacuum workers
autovacuum_max_workers = 3

# Delay between autovacuum runs
autovacuum_naptime = 1min

# Vacuum threshold (minimum rows before vacuum)
autovacuum_vacuum_threshold = 50

# Analyze threshold
autovacuum_analyze_threshold = 50

# Vacuum scale factor (fraction of table size)
autovacuum_vacuum_scale_factor = 0.1

# Analyze scale factor
autovacuum_analyze_scale_factor = 0.05

# Autovacuum cost delay (0 = no delay, faster vacuum)
autovacuum_vacuum_cost_delay = 2ms

# Autovacuum cost limit
autovacuum_vacuum_cost_limit = 200

# ═══════════════════════════════════════════════════════════════════
# Lock Management
# ═══════════════════════════════════════════════════════════════════

# Maximum locks per transaction
max_locks_per_transaction = 64

# Deadlock timeout
deadlock_timeout = 1s

# ═══════════════════════════════════════════════════════════════════
# Extensions and Preloading
# ═══════════════════════════════════════════════════════════════════

# Preload extensions at server start
shared_preload_libraries = 'pg_stat_statements'

# pg_stat_statements configuration
pg_stat_statements.max = 10000
pg_stat_statements.track = all

# ═══════════════════════════════════════════════════════════════════
# Locale and Formatting
# ═══════════════════════════════════════════════════════════════════

# Timezone (UTC for production)
timezone = 'UTC'

# Client encoding
client_encoding = 'UTF8'

# Full text search configuration
default_text_search_config = 'pg_catalog.english'

# ═══════════════════════════════════════════════════════════════════
# Security Settings
# ═══════════════════════════════════════════════════════════════════

# Password encryption method (scram-sha-256 is most secure)
password_encryption = scram-sha-256

# SSL (disabled in container - Traefik handles TLS)
ssl = off

# ═══════════════════════════════════════════════════════════════════
# Performance Monitoring
# ═══════════════════════════════════════════════════════════════════

# Track I/O timing (useful for performance analysis)
track_io_timing = on

# Track activity (required for pg_stat_activity)
track_activities = on

# Track counts (for pg_stat_user_tables, etc.)
track_counts = on

# Track functions
track_functions = all

# ═══════════════════════════════════════════════════════════════════
# Background Writer Settings
# ═══════════════════════════════════════════════════════════════════

# Background writer delay
bgwriter_delay = 200ms

# Background writer LRU maxpages
bgwriter_lru_maxpages = 100

# Background writer LRU multiplier
bgwriter_lru_multiplier = 2.0

# ═══════════════════════════════════════════════════════════════════
# Notes
# ═══════════════════════════════════════════════════════════════════
#
# This configuration is optimized for:
# - 1GB RAM container (production)
# - SSD storage
# - OLTP workload (frequent reads and writes)
# - Moderate concurrency (up to 100 connections)
#
# For different workloads, adjust:
# - Increase work_mem for complex queries with lots of sorting
# - Increase maintenance_work_mem for faster index creation
# - Increase max_wal_size for write-heavy workloads
# - Decrease max_connections if memory is tight
#
# Monitoring queries:
# - SELECT * FROM pg_stat_statements ORDER BY total_time DESC LIMIT 10;
# - SELECT * FROM pg_stat_user_tables;
# - SELECT * FROM pg_stat_user_indexes;
# ═══════════════════════════════════════════════════════════════════
