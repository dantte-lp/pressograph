# ═══════════════════════════════════════════════════════════════════
# Multi-stage Build for Pressure Test Visualizer
# ═══════════════════════════════════════════════════════════════════

# ═══════════════════════════════════════════════
# Stage 1: Build React Application
# ═══════════════════════════════════════════════
FROM node:22-trixie-slim AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm install --prefer-offline --no-audit

# Copy source code
COPY . .

# Build application
RUN npm run build

# ═══════════════════════════════════════════════
# Stage 2: Production Nginx Server
# ═══════════════════════════════════════════════
FROM docker.io/nginx:1.29-trixie-perl

# Copy built assets from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY deploy/nginx.conf /etc/nginx/conf.d/default.conf

# Install curl for healthcheck
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:80/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
